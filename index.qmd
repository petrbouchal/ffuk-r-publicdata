---
title: "Kde vzít otevřená data a jak s nimi pracovat efektivně"
subtitle: "Vybraná témata analýzy dat FF UK"
author: Petr Bouchal, 31. říjen 2024
format: 
  revealjs:
    theme: [default, custom.scss]
    mathjax: null
    slide-level: 3
    progress: false
    preview-links: true
execute:
    echo: true
  
editor: source
---

```{r, echo=FALSE}
library(dplyr)
library(czso)
library(statnipokladna)
library(gt)
```

# Cíle

-   zorientovat se ve zdrojích dat
-   pochopit, jak je dostáváme do R: balíky {czso} a {statnipokladna}
-   naučit se s nimi pracovat na příkladu statistik a fiskálních dat
-   naučit se pracovat s většími daty mimo paměť (Parquet/Arrow)

------------------------------------------------------------------------

## Veřejná data: proč v R

-   strojově čitelná data pro analýzu rovnou v R
-   reprodukovatelný postup
-   automatizace
-   update při každém spuštění

Ale pozor:

-   online zdroj se může změnit/zmizet
-   tedy: třeba zaznamenávat, zachytit i data
-   reprodukovatelnost vs. automatizace

## Veřejná data: jak

-   API (služba, která vydává data na požádání)
-   soubory
-   výjimečně specifické služby (geocoding)

R (balíček) jako rozhraní pro přístup k API nebo datovým sadám

## Veřejná data: co

-   jaké informace: katalog + datové sady

-   jaká data: data + číselníky

-   obsah: typicky statistiky a standardizované datové sady

-   od koho: statistické úřady, mezinárodní organizace, státy obecně, NGOs

-   forma: tabulky v long formátu

### Logika načítání dat z API nebo souborů

1.  Balík postytuje přístup ke katalogu. Tam hledej požadovanou položku, zachyť její ID
2.  Načti data podle ID, dostaneš data.frame. Balík se stará o to, odkud se data berou
3.  U některých zdrojů lze rovnou filtrovat nebo poslat SQL dotaz
4.  Některé zdroje/balíky umožňují vyžádat rovnou "rozklíčované" číselníky
5.  Podle potřeby se (ne)starej o to, kde se skladují mezivýstupy
6.  Stáhni a napoj číselníky

### Míra kontroly dle potřeby

```{mermaid}
%%| echo: FALSE

flowchart LR
    A[Table ID] -->|"sp_get_table()"| B(Data frame)
    A[Table ID] -->|"sp_get_table(dest_dir = '~/data')"| M(ZIP file)
    A[Table ID] -->|"sp_get_table(dest_dir = 'data')"| N(ZIP file)
    M --> O(CSV file)
    N --> P(CSV file)
    O --> B
    P --> B
    A --> |"sp_get_dataset_url()"| C(URL)
    C --> |"sp_get_dataset(url)"| H(ZIP file)
    C --> |"sp_get_dataset(url, dest_dir = 'data')"| F(ZIP file)
    C --> |"sp_get_dataset(url, dest_dir = '~/data')"| I(ZIP file)
    H --> |"sp_get_table_file()"| X(cesta k CSV)
    F --> |"sp_get_table_file()"| Y(cesta k CSV)
    I --> |"sp_get_table_file()"| Z(cesta k CSV)
    X --> |"sp_load_table()"| B
    Y --> |"sp_load_table()"| B
    Z --> |"sp_load_table()"| B
```

------------------------------------------------------------------------

# Příklad: katalog ČSÚ

```{r}
#| results: 'asis'
library(czso)
czso_get_catalogue() |> head() |> gt::gt()
```

## Přehledněji

```{r}
czso_get_catalogue() |> head() |> select(title, dataset_id) |> gt()
```

## Prohledáme katalog

```{r}
czsokat <- czso_get_catalogue()
czso_filter_catalogue(czsokat, c("obce", "obyvatel", "2023")) |> 
  select(title, dataset_id, description) |> t()
```

## Načteme si data ČSÚ

```{r}
czso_get_table("130141r24")
```

## Načteme číselník

```{r}
czso_get_codelist(43)
```

### Číselník vazeb

```{r}
czso_get_catalogue(c("vazba", "orp", "obec")) |> select(title, dataset_id)
```

```{r}
czso_get_codelist("cis43vaz65")
```

## Bonus: struktura území

```{r}
czso_get_catalogue(search_terms = c("struktura", "území")) |> select(title, dataset_id)
```

```{r, echo = FALSE}
czso_get_table("struktura_uzemi_cr") |> head(3) |> print(max_footer_lines = 2)
```

```{r, echo = TRUE, eval = FALSE}
czso_get_table("struktura_uzemi_cr")
```

Existuje i verze se změnami v čase, ale v Excelu, viz <https://csu.gov.cz/i_zakladni_uzemni_ciselniky_na_uzemi_cr_a_klasifikace_cz_nuts>.

------------------------------------------------------------------------

## Data ČSÚ o území

ČSÚ taky kompiluje databáze základních informací o území po letech, za kraje a obce.
Struktura je složitější než běžná otevřená data ČSÚ, je ale konzistentní a může se to hodit.

-   [databáze KROK](https://www.czso.cz/csu/czso/databaze-krok-otevrena-data)
-   [databáze MOS](https://www.czso.cz/csu/czso/databaze-mos-otevrena-data)

------------------------------------------------------------------------

## Všechna metadata ČSÚ

lze hledat v tzv.
databázi metainformací

<https://apl2.czso.cz/iSMS/>

------------------------------------------------------------------------

# Otázka

> Jak se liší příjmy obcí s RP z daně za nemovitostí v jednotlivých krajích?

------------------------------------------------------------------------

## Státní pokladna: katalog

```{r}
library(statnipokladna)
statnipokladna::sp_datasets
```

------------------------------------------------------------------------

```{r}
statnipokladna::sp_tables
```

## Načteme rozpočty obcí

```{r}
rozp_obce <- sp_get_table("budget-local", year = 2023, dest_dir = "data-input/sp")
```

```{r}
dim(rozp_obce)
```

```{r}
colnames(rozp_obce)
```

```{r}
head(rozp_obce)
```

## Jdeme na kód

<https://github.com/petrbouchal/ffuk-r-publicdata>

<https://github.com/petrbouchal/ffuk-r-publicdata/archive/refs/heads/main.zip>

Případně

```sh
git clone https://github.com/petrbouchal/ffuk-r-publicdata
```
nebo v R

```r
usethis::create_from_github("petrbouchal/ffuk-r-publicdata")
```

Potom

```{r, eval=FALSE}
source("0_setup.R")
```

## 1_explorace.R


## Dodatečné úkoly:

-   vyrobte mapu!
-   udělejte totéž pro státy EU

## Balíky na veřejná data

-   eurostat (viz i [klikací katalog](https://ec.europa.eu/eurostat/web/main/data/database))
-   wbdata: Světová banka
-   oecd: OECD
-   giscoR: oficiální evropská geodata území
-   WDI: část data Světové banky
-   statistické úřady po světě: viz [CRAN Task View](https://cran.r-project.org/web/views/OfficialStatistics.html#access)

### Česká data

-   RCzechia, CzechData
-   statnipokladna
-   czso
-   vsezved: rejstříky a seznamy škol
-   hlidacr: data Hlídače státu
-   pragr: geodata o Praze
-   ispv: Informační systém o průměrném výdělku ("Trexima")

Viz též - https://github.com/kokes/knod - https://github.com/kokes/od

### Pomůcky

-   {countrycode}
-   {nuts}
-   {regions}

# Co když je dat hodně: práce s daty mimo paměť

## Kolik dat je hodně? Co je s tím za problém?

Typicky: miliony řádků

Data se nevejdou do paměti

Dlouho se načítají, ne vždy počítáme se všemi

Odvozené datasety násobí požadavky na paměť

Pomalu se s nimi počítá

## Obecné řešení

Výpočetní engines mimo R

Chytřejší skladování dat

Rychlejší nástroje na počítání

## Parquet

- formát skladování dat v souborech optimalizovaný pro analýzu
- součástí souboru je definice datových typů
- data organizovaná po sloupcích a úsecích řádků
- možnost načítat dle potřeby jen části: v prostředí R jen index
- vhodné pro sdílení dat mezi systémy/jazyky
- {arrow}: plná polní vs. {nanoparquet}: lightweight ukládání a načítání dat

## Arrow

- formát skladování (parquet/CSV) + výpočetní engine (arrow)
- balík {arrow} = funkce v R pro ovládání arrow engine
- výpočty se dějí mimo R s daty mimo paměť
- možnost explicitně dělit data do více souborů podle skupin
- balík [{purrrow}](https://github.com/petrbouchal/purrrow) na out-of-memory kompilaci dat

## DuckDB

- in-process databáze - bez serveru
- může fungovat jako vrstva mezi R a daty (např. Parquet/arrow)

## Rychlost

- {data.table} => {dtplyr}
- {duckdb} / {duckplyr}
- {collapse} / {fastverse} => {fastplyr}
- {furrr}: paralelizace po skupinách

## Zdroje

- Workshop: Francois Michonneau 2024: [slides](https://docs.google.com/presentation/d/e/2PACX-1vTLPVZWcJH-1e3KxMrIx14ab8KFTGL1pw2eQJDziEI3-8cyuvUxCkFFEXhJ9-YmnvbxTD4thiRt9QQF/pub?start=false&loop=false&delayms=10000&slide=id.p) + [code](https://github.com/fmichonneau/2024-latinr-duckdb-arrow/)
- Knížka [Scaling Up with R and Arrow](https://arrowrbook.com/) (Nic Crane, Jonathan Keane, Neal Richardson)
- Posit Conf 2024 [přednáška Give me the Data - Colin Gillespie](https://www.youtube.com/watch?v=zrUqOxdUUwY&list=PL9HYL-VRX0oSFkdF4fJeY63eGDvgofcbn&index=7)
- Posit Conf 2024 [workshop - Nic Crane & Steph Hazlitt](https://posit-conf-2024.github.io/arrow/)
- [Arrow R Cookbook](https://arrow.apache.org/cookbook/r/)
- [Jak díky {arrow} načíst mega CSV bez přetečení paměti](https://francoismichonneau.net/2022/10/import-big-csv/)

# Otázky? Tipy? Nápady?

[petr.bouchal\@vlada.gov.cz](mailto:petr.bouchal@vlada.gov.cz){.email}

------------------------------------------------------------------------
